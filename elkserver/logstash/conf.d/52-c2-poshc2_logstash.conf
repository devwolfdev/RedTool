# Part of RedELK
#
# In this file we configure the logstash filters for PoshC2 logs
#
# Author: Outflank B.V. / Marc Smeets / @benpturner - Ben Turner
#

filter {
  if [infralogtype] == "rtops" and [c2program] == "poshc2" {
    
    if [c2logtype] == "events" {

      # Let's first trim the syslog-like info from the log line
      grok {
        match => { "message" => [ ".*" ] }
      }

      # matching lines like: *** initial implant
      if "PID:" in [message] and "Sleep:" in [message] {

        mutate {
          replace  => { "c2logtype" => "implant_newimplant" }
        }

        grok {
          match => { "message" => "%{IPORHOST:target_ipext}\:%{IPORHOST:target_port}\s+\|\s+Time:%{GREEDYDATA:c2timestamp}\s+\|\s+PID:%{IPORHOST:target_pid}\s+\|\s+Sleep:%{GREEDYDATA:implant_sleep}\s+\|\s+%{GREEDYDATA:target_user}\s+@\s+%{GREEDYDATA:target_hostname}\s+\(%{GREEDYDATA:implant_arch}\)\s+\|\s+URL\:%{GREEDYDATA:implant_url}" }
        }

        date {
          match => [ "c2timestamp", "dd/MM/YYYY HH:mm:ss" ]
          target => "@timestamp"
          timezone => "Etc/UTC"
        }

        clone {
          clones => [ "implantsdb" ]
          remove_field => [ "c2logtype","host","infralogtype","message" ]
        }

      }

      # matching lines like: *** Screenshot captured:
      if "Screenshot captured:" in [message] {

        mutate {
          replace  => { "c2logtype" => "screenshots" }
        }

        grok {
          match => { "message" => "Screenshot\s+captured:\s+%{GREEDYDATA:screenshot}" }
        }

      }

      # matching lines like: *** Download:
      if "Download file" in [message] {

        mutate {
          replace  => { "c2logtype" => "downloads" }
        }

        grok {
          match => { "message" => "Download\s+file\s+part\s+%{GREEDYDATA:download}" }
        }

      }

      # matching lines like: *** Messages:
      if "Message from" in [message] or "logged off" in [message] or "logged on" in [message] {

        mutate {
          replace  => { "c2logtype" => "messages" }
        }

        grok {
          match => { "message" => "(0[1-9]|[12]\d|3[01])/(0[1-9]|1[0-2])/[12]\d{3}\s+([0-1][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9]):%{GREEDYDATA:psmessage}" }
        }

      }

    }
  }
}
