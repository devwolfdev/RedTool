name: Build docker kibana image

on:
  push:
    branches:
      - 'master'
      - 'maindev'
      - 'v*'
    tags:
      - 'v*'
    paths:
      - 'elkserver/devdata/redelk-kibana/**'
      - '.github/workflows/docker-image-kibana.yml'
  pull_request:
    branches:
      - 'master'
      - 'maindev'
      - 'v*'
    paths:
      - 'elkserver/devdata/redelk-kibana/**'
      - '.github/workflows/docker-image-kibana.yml'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE="${docker_repo}/kibana"
          VERSION=latest
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS\n${DOCKER_IMAGE}:latest"
          fi
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=build_args::VERSION=${VERSION} \
            BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            VCS_REF=${GITHUB_SHA::8}
        with:
          docker_repo: ${{ secrets.DOCKER_REPO }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: elkserver/devdata/redelk-kibana
          file: ./elkserver/devdata/redelk-kibana/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.prepare.outputs.tags }}
          build-args: ${{ steps.prepare.outputs.build_args }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
